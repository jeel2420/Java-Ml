package com.javaml.ml;

import java.awt.*;
import java.io.BufferedReader;
import java.io.FileReader;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.io.File;
import weka.core.Stopwords;

public class Main {

    public static void main(String[] args) throws Exception {

        BufferedReader filereader = new BufferedReader(new FileReader("spam-train-set.txt")); //file contains all filenames in spam train folder

        String filename = filereader.readLine();

        while(filename != null)
        {
            String path = "C:\\Users\\Lenovo\\Desktop\\JavaML\\spam-train\\"+filename; 
            BufferedReader reader = new BufferedReader(new FileReader(path));
            filename = filereader.readLine();
            Map<String, Integer> frequency = new LinkedHashMap<>();

            String line = reader.readLine();

            Functions f=new Functions(); //Object of the Functions class to implement any preprocessing tasks.

            line=f.remove_marks(line);  //Return a line without any marks (specified in the 'or' condition)

            while(line != null) {
                //System.out.println("Processing line: " + line);

                String [] words = line.split(" ");

                for(String word : words) {
                    if(word == null || word.trim().equals("")) {
                        continue;
                    }
                    String processed = word.toLowerCase();
                    processed = processed.replace(",", "");

                    if(frequency.containsKey(processed)) {
                        frequency.put(processed,
                                frequency.get(processed) + 1);
                    } else {
                        frequency.put(processed, 1);
                    }
                }
                line = reader.readLine();
            }

            f.stopwords_removal(frequency);
            System.out.println(frequency);
        }
    }
}

class Functions{
    void stopwords_removal(Map<String,Integer> frequency){
        for(int pos=0;pos<frequency.size();pos++) {
            String response = (String) (frequency.keySet().toArray())[pos];
            if(Stopwords.isStopword(response)){
                frequency.remove(response);
            }
        }
    }

    String remove_marks(String line){
        StringBuilder str=new StringBuilder(line);  //String builder was used because, I wanted to use setCharAt()
        for(int i=0;i<line.length();i++) {
            char r = line.toCharArray()[i];
            if (r == '?' || r == '!' || r == '/' || r == '@') {
                str.setCharAt(i,' ');
            }
        }
        return str.toString();
    }
}
